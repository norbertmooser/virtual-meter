name: Rust CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'


    - name: Upload deploy directory
      uses: actions/upload-artifact@v3
      with:
        name: deploy
        path: |
          deploy/**  # Include all files in the deploy directory

    - name: Upload transfer_artifact procedure
      uses: actions/upload-artifact@v3
      with:
        name: transfer_artifact
        path: |
          transfer_artifact

    - name: Install yq yaml bash processor
      run: |
        wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        chmod a+x /usr/local/bin/yq

    # Leaves the decrypted key in the deploy/*/ directory
    - name: Loop through deploy directory check every target directory
      run: |
        for dir in deploy/*/; do
          (cd $dir && chmod +x check_target_dir && ./check_target_dir)
        done

        
    - name: Create artifact (Set up Rust)
      uses: actions-rs/toolchain@v1.0.0
      with:
        toolchain: stable
        override: true
        
    - name: Create artifact (Build)
      run: cargo build --release --verbose
        
        # - name: Run tests
        #   run: cargo test --verbose
        
        # - name: List target directory
        #   run: ls -R target/

    - name: Upload binary and config directory
      uses: actions/upload-artifact@v3
      with:
        name: virtual_meter_server
        path: |
          target/release/virtual_meter_server
          config/**  # Include all files in the config directory

    - name: Transfer binary and config via SFTP
      run: |
        for dir in deploy/*/; do
          chmod +x transfer_artifact && ./transfer_artifact $dir
        done
       
