name: Rust CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Set up SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PK_BACHELOR_DEPLOY }}
      run: |
        echo "The secret value is: $SSH_PRIVATE_KEY"
        echo "$SSH_PRIVATE_KEY" > id_rsa
        chmod 600 id_rsa

    - name: Create remote directory
      run: |
        USER="deploy"
        SERVER_IP="217.160.9.123"
        PORT="47122"
        DIR_PATH="/home/deploy/virtual_meter_server"
        
    
        ssh -o StrictHostKeyChecking=no -i "id_rsa" -p "$PORT" "$USER@$SERVER_IP" bash -c "'
        if [ -e \"$DIR_PATH\" ]; then
            if [ -d \"$DIR_PATH\" ]; then
                echo \"Directory already exists.\"
            else
                echo \"A file with the same name exists. Aborting.\"
                exit 1
            fi
        else
            mkdir -p \"$DIR_PATH\"
            echo \"Directory created.\"
        fi
        '"

    - name: Set up Rust
      uses: actions-rs/toolchain@v1.0.0
      with:
        toolchain: stable
        override: true

    - name: Build
      run: cargo build --release --verbose

    # - name: Run tests
    #   run: cargo test --verbose

    # - name: List target directory
    #   run: ls -R target/

    - name: Upload binary and config directory
      uses: actions/upload-artifact@v3
      with:
        name: virtual_meter_server
        path: |
          target/release/virtual_meter_server
          config/**  # Include all files in the config directory

    - name: Transfer binary and config via SFTP
      run: |
        USER="deploy"
        SERVER_IP="217.160.9.123"
        PORT="47122"
        BINARY_PATH="target/release/virtual_meter_server"
        CONFIG_PATH="config"
        DEST_PATH="/home/deploy/virtual_meter_server"

        # Check if the binary and config directory exist before attempting to upload
        if [[ ! -f "$BINARY_PATH" ]]; then
          echo "Error: Binary file does not exist at $BINARY_PATH"
          exit 1
        fi

        if [[ ! -d "$CONFIG_PATH" ]]; then
          echo "Error: Config directory does not exist at $CONFIG_PATH"
          exit 1
        fi

        # Use SFTP to transfer files
        sftp -o StrictHostKeyChecking=no -i "id_rsa" -P "$PORT" "$USER@$SERVER_IP" <<EOF
        put "$BINARY_PATH" "$DEST_PATH/virtual_meter_server"
        put -r "$CONFIG_PATH" "$DEST_PATH/config"  # Upload the config directory recursively
        EOF

        echo "Transfer completed successfully."
